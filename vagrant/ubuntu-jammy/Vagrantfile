# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
    # The most common configuration options are documented and commented below.
    # For a complete reference, please see the online documentation at
    # https://docs.vagrantup.com.

    # Every Vagrant development environment requires a box. You can search for
    # boxes at https://vagrantcloud.com/search.
    config.vm.box = "ubuntu/jammy64"

    # Disable automatic box update checking. If you disable this, then
    # boxes will only be checked for updates when the user runs
    # `vagrant box outdated`. This is not recommended.
    config.vm.box_check_update = false

    # The time in seconds that Vagrant will wait for the machine to boot and be
    # accessible. By default this is 300 seconds.
    config.vm.boot_timeout = 300

    # Share an additional folder to the guest VM. The first argument is
    # the path on the host to the actual folder. The second argument is
    # the path on the guest to mount the folder. And the optional third
    # argument is a set of non-required options.
    config.vm.synced_folder "../..", "/app_src"

    # Provider-specific configuration so you can fine-tune various
    # backing providers for Vagrant. These expose provider-specific options.
    config.vm.provider "virtualbox" do |vb|
        # vb.gui = false
        vb.memory = 1024
    end

    # Enable provisioning with a shell script. Additional provisioners such as
    # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
    # documentation for more information about their specific syntax and use.
    config.vm.provision "shell", inline: <<-SHELL
        # Python will build from source. These are Python's build deps.
        sudo apt update && apt install -y build-essential libncursesw5-dev libreadline-dev zlib1g zlib1g-dev libssl-dev libbz2-dev libsqlite3-dev liblzma-dev libxcb-xinerama0
        sudo apt install -y ruby-dev && sudo gem install fpm

        export PYENV_ROOT=/home/vagrant/.pyenv
        curl https://pyenv.run | bash
        export PATH="$PYENV_ROOT/bin:$PATH"

        pyenv install 3.6
        pyenv global 3.6
        eval "$(pyenv init -)"

        mkdir /home/vagrant/app_build
        cd /home/vagrant/app_build
        python -m venv venv
        source venv/bin/activate

        python -m pip install --upgrade pip
        python -m pip install -r /app_src/requirements.txt

        cd /app_src
        fbs freeze
        fbs installer
    SHELL
end
